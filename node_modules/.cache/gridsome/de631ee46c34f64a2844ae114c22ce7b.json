{"remainingRequest":"/home/toni_el/project/toniel.github.io/node_modules/babel-loader/lib/index.js??ref--1-1!/home/toni_el/project/toniel.github.io/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/toni_el/project/toniel.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/toni_el/project/toniel.github.io/src/components/SearchInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/toni_el/project/toniel.github.io/src/components/SearchInput.vue","mtime":1632283720216},{"path":"/home/toni_el/project/toniel.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/toni_el/project/toniel.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/toni_el/project/toniel.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/toni_el/project/toniel.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es.array.for-each\";\nimport \"core-js/modules/es.array.map\";\nimport \"core-js/modules/es.regexp.exec\";\nimport \"core-js/modules/es.string.search\";\nimport \"core-js/modules/web.dom-collections.for-each\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport SearchFocus from './SearchFocus';\nexport default {\n  components: {\n    SearchFocus: SearchFocus\n  },\n  computed: {\n    pages: function pages() {\n      var result = [];\n      var allPost = this.$static.allPost.edges.map(function (edge) {\n        return edge.node;\n      });\n      allPost.forEach(function (page) {\n        result.push({\n          path: page.path,\n          title: page.title,\n          summary: page.summary\n        });\n      });\n      var allDocs = this.$static.allDocumentation.edges.map(function (edge) {\n        return edge.node;\n      });\n      allDocs.forEach(function (page) {\n        result.push({\n          path: page.path,\n          title: page.title\n        });\n      });\n      return result;\n    }\n  },\n  data: function data() {\n    return {\n      query: '',\n      results: [],\n      highlightedIndex: 0,\n      searchResultsVisible: false,\n      options: {\n        shouldSort: true,\n        includeMatches: true,\n        threshold: 0.5,\n        location: 0,\n        distance: 500,\n        maxPatternLength: 32,\n        minMatchCharLength: 1,\n        keys: ['title', 'summary']\n      }\n    };\n  },\n  methods: {\n    reset: function reset() {\n      this.query = '';\n      this.highlightedIndex = 0;\n    },\n    softReset: function softReset() {\n      this.highlightedIndex = 0;\n      this.searchResultsVisible = true;\n    },\n    performSearch: function performSearch() {\n      var _this = this;\n\n      this.$search(this.query, this.pages, this.options).then(function (results) {\n        _this.results = results;\n      });\n    },\n    highlightPrev: function highlightPrev() {\n      if (this.highlightedIndex > 0) {\n        this.highlightedIndex = this.highlightedIndex - 1;\n        this.scrollIntoView();\n      }\n    },\n    highlightNext: function highlightNext() {\n      if (this.highlightedIndex < this.results.length - 1) {\n        this.highlightedIndex = this.highlightedIndex + 1;\n        this.scrollIntoView();\n      }\n    },\n    scrollIntoView: function scrollIntoView() {\n      this.$refs.results.children[this.highlightedIndex].scrollIntoView({\n        block: 'nearest'\n      });\n    },\n    gotoLink: function gotoLink() {\n      if (this.results[this.highlightedIndex]) {\n        window.location = this.results[this.highlightedIndex].item.path;\n      }\n    },\n    focusSearch: function focusSearch(e) {\n      if (e.key === '/') {\n        this.$refs.search.focus();\n      }\n    }\n  }\n};",null]}