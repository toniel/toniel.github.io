{"remainingRequest":"/home/toni_el/project/toniel.github.io/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/toni_el/project/toniel.github.io/src/components/SearchInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/toni_el/project/toniel.github.io/src/components/SearchInput.vue","mtime":1632283720216},{"path":"/home/toni_el/project/toniel.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/toni_el/project/toniel.github.io/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/toni_el/project/toniel.github.io/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/toni_el/project/toniel.github.io/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport SearchFocus from './SearchFocus'\n\nexport default {\n  components: {\n    SearchFocus,\n  },\n  computed: {\n    pages () {\n      let result = [];\n      const allPost = this.$static.allPost.edges.map(edge => edge.node);\n      allPost.forEach(page => {\n        result.push({\n          path: page.path,\n          title: page.title,\n          summary: page.summary\n        });\n      });\n      const allDocs = this.$static.allDocumentation.edges.map(edge => edge.node);\n      allDocs.forEach(page => {\n        result.push({\n          path: page.path,\n          title: page.title\n        });\n      });\n      return result;\n    }\n  },\n  data() {\n    return {\n      query: '',\n      results: [],\n      highlightedIndex: 0,\n      searchResultsVisible: false,\n      options: {\n        shouldSort: true,\n        includeMatches: true,\n        threshold: 0.5,\n        location: 0,\n        distance: 500,\n        maxPatternLength: 32,\n        minMatchCharLength: 1,\n        keys: ['title', 'summary']\n      }\n    }\n  },\n  methods: {\n    reset() {\n      this.query = ''\n      this.highlightedIndex = 0\n    },\n    softReset() {\n      this.highlightedIndex = 0\n      this.searchResultsVisible = true\n    },\n    performSearch() {\n      this.$search(this.query, this.pages, this.options).then(results => {\n        this.results = results\n      })\n    },\n    highlightPrev() {\n      if (this.highlightedIndex > 0) {\n        this.highlightedIndex = this.highlightedIndex - 1\n        this.scrollIntoView()\n      }\n    },\n    highlightNext() {\n      if (this.highlightedIndex < this.results.length - 1) {\n        this.highlightedIndex = this.highlightedIndex + 1\n        this.scrollIntoView()\n      }\n    },\n    scrollIntoView() {\n      this.$refs.results.children[this.highlightedIndex].scrollIntoView({ block: 'nearest' })\n    },\n    gotoLink() {\n      if (this.results[this.highlightedIndex]) {\n        window.location = this.results[this.highlightedIndex].item.path\n      }\n    },\n    focusSearch(e) {\n      if (e.key === '/') {\n        this.$refs.search.focus()\n      }\n    }\n  }\n}\n",null]}